generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(cuid())
  name               String?
  email              String?   @unique
  emailVerified      DateTime?
  image              String?
  password           String?
  stripeCustomerId   String?
  subscriptionStatus String?
  hasPaid            Boolean   @default(false)

  accounts Account[]
  sessions Session[]

  // New relations
  resume       Resume?
  coverLetters CoverLetter[]
  usages       Usage[]
  savedJobs    SavedJob[]

  generationLimit Int? // null means unlimited
  generationCount Int  @default(0)
}

model SavedJob {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  jobId       String
  title       String
  company     String
  location    String
  url         String
  description String
  savedAt     DateTime @default(now())

  @@unique([userId, jobId]) // Prevent saving same job twice
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Resume {
  id        String   @id @default(cuid())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CoverLetter {
  id        String   @id @default(cuid())
  content   String
  tone      String
  jobAd     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model Usage {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  month  String // format "YYYY-MM", e.g. "2025-06"
  count  Int    @default(0)

  @@unique([userId, month])
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  email     String
  expires   DateTime
  createdAt DateTime @default(now())
}
